{"version":3,"sources":["components/Stopwatch/Stopwatch.js","components/Timer/Timer.js","components/Buttons/Buttons.js","components/Time.js","components/Laps/Laps.js","components/Menu/Menu.js","App.js","index.js"],"names":["Stopwatch","useState","isRunning","setIsRunning","Time","startTime","setStartTime","stopTime","setStopTime","lapStartTime","setLapStartTime","lapStopTime","setLapStopTime","laps","setLaps","handleRun","now","Date","handleStop","origin","handleResume","handleStart","handleLap","lap","handleReset","handleKeyDown","key","code","useEffect","window","addEventListener","removeEventListener","className","style","marginTop","length","stopwatchTime","lapTime","showLapTimer","Button","id","show","role","callback","Timer","time","useRef","run","formatted","m","s","ms","lm","ls","lms","current","innerHTML","requestAnimationFrame","cancelAnimationFrame","anime","targets","opacity","height","duration","easing","ref","Buttons","children","translateX","onClick","toUpperCase","toString","padStart","givenTime","this","getTime","getMinutes","getSeconds","getMilliseconds","Header","Lap","isBest","isWorst","isBetter","number","difference","total","Laps","getLapTime","getLapDifference","array","index","diff","currentLap","prevLap","lapsTimes","push","bestTime","Math","min","apply","indexOf","max","getTotalTime","slice","reduce","p","c","times","document","querySelector","scrollTop","offsetHeight","scrollHeight","map","Item","name","description","Key","self","Menu","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.aaafc184.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './Stopwatch.scss';\r\nimport { Time, Timer, Buttons, Laps } from '../';\r\n\r\nconst Stopwatch = () => {\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [startTime, setStartTime] = useState(new Time(0));\r\n  const [stopTime, setStopTime] = useState(new Time(0));\r\n  const [lapStartTime, setLapStartTime] = useState(new Time(0));\r\n  const [lapStopTime, setLapStopTime] = useState(new Time(0));\r\n  const [laps, setLaps] = useState([new Time(0)]);\r\n\r\n  const handleStart = () => {\r\n    const now = Date.now();\r\n\r\n    setIsRunning(true);\r\n    setStartTime(new Time(now));\r\n    setLapStartTime(new Time(now));\r\n  };\r\n\r\n  const handleStop = () => {\r\n    const now = Date.now();\r\n\r\n    setIsRunning(false);\r\n    setStopTime(new Time(now));\r\n    setLapStopTime(new Time(now));\r\n  };\r\n\r\n  const handleResume = () => {\r\n    const now = Date.now();\r\n\r\n    setIsRunning(true);\r\n    setStartTime(new Time(now - (stopTime.origin - startTime.origin)));\r\n    setLapStartTime(new Time(now - (lapStopTime.origin - lapStartTime.origin)));\r\n  };\r\n\r\n  const handleRun = () => {\r\n    isRunning\r\n      ? handleStop()\r\n      : startTime.origin > 0\r\n      ? handleResume()\r\n      : handleStart();\r\n  };\r\n\r\n  /**\r\n   * If `Stopwatch` is running, put a new lap `Time` to `laps` array\r\n   */\r\n  const handleLap = () => {\r\n    if (isRunning) {\r\n      const now = Date.now();\r\n\r\n      const lap = new Time(now - lapStartTime.origin);\r\n      setLaps([...laps, lap]);\r\n      setLapStartTime(new Time(now));\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function for reset `Stopwatch` values\r\n   */\r\n  const handleReset = () => {\r\n    if (!isRunning) {\r\n      setStartTime(new Time(0));\r\n      setStopTime(new Time(0));\r\n      setLapStartTime(new Time(0));\r\n      setLapStopTime(new Time(0));\r\n      setLaps([new Time(0)]);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns a value of `Time` measured from `start` to `now`\r\n   */\r\n  const getCurrentTime = () => {\r\n    return new Time(Date.now() - startTime.origin);\r\n  };\r\n\r\n  /**\r\n   * Returns a value of `Time` measured from `start` to `stop`\r\n   */\r\n  const getStoppedTime = () => {\r\n    return new Time(stopTime.origin - startTime.origin);\r\n  };\r\n\r\n  /**\r\n   * Returns a function for getting `Time` depends on `isRunning` boolean\r\n   */\r\n  const getTime = () => {\r\n    return isRunning ? getCurrentTime() : getStoppedTime();\r\n  };\r\n\r\n  /**\r\n   * Returns a value of `Time` measured from `lapTimeStart` to `now`\r\n   */\r\n  const getCurrentLapTime = () => {\r\n    return new Time(Date.now() - lapStartTime.origin);\r\n  };\r\n\r\n  /**\r\n   * Returns a value of `Time` measured from `lapTimeStart` to `lapTimeStop`\r\n   */\r\n  const getStoppedLapTime = () => {\r\n    return new Time(lapStopTime.origin - lapStartTime.origin);\r\n  };\r\n\r\n  /**\r\n   * Returns a function for getting `Time` depends on `isRunning` boolean\r\n   */\r\n  const getLapTime = () => {\r\n    return isRunning ? getCurrentLapTime() : getStoppedLapTime();\r\n  };\r\n\r\n  const handleKeyDown = (key) => {\r\n    if (key.code === 'KeyS') {\r\n      handleRun();\r\n    }\r\n\r\n    if (key.code === 'KeyL') {\r\n      handleLap();\r\n    }\r\n\r\n    if (key.code === 'KeyR') {\r\n      handleReset();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"stopwatch\"\r\n      style={{ marginTop: laps.length > 1 ? 112 : 291 }}>\r\n      <Timer\r\n        stopwatchTime={getTime}\r\n        lapTime={getLapTime}\r\n        showLapTimer={laps.length > 1}\r\n      />\r\n      <Buttons>\r\n        <Buttons.Button\r\n          id={1}\r\n          show={isRunning || (!isRunning && startTime.origin > 0)}\r\n          role={isRunning ? 'stop' : startTime.origin ? 'resume' : 'start'}\r\n          callback={handleRun}\r\n        />\r\n        <Buttons.Button\r\n          id={2}\r\n          show={isRunning || (!isRunning && startTime.origin > 0)}\r\n          role={isRunning ? 'lap' : startTime.origin ? 'reset' : ''}\r\n          callback={\r\n            isRunning ? handleLap : startTime.origin ? handleReset : null\r\n          }\r\n        />\r\n      </Buttons>\r\n      {laps.length > 1 ? <Laps laps={laps} /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;\r\n","import { useEffect, useRef } from 'react';\r\nimport anime from 'animejs/lib/anime.es';\r\nimport './Timer.scss';\r\n\r\nconst Timer = ({ stopwatchTime, lapTime, showLapTimer }) => {\r\n  const time = useRef();\r\n  const lap = useRef();\r\n\r\n  useEffect(() => {\r\n    function run() {\r\n      const { m, s, ms } = stopwatchTime().formatted();\r\n      const { m: lm, s: ls, ms: lms } = lapTime().formatted();\r\n      time.current.innerHTML = `${m}:${s}.<div class=\"timer__stopwatchTime--ms\">${ms}</div>`;\r\n      lap.current.innerHTML = `${lm}:${ls}.<div class=\"timer__lapTime--ms\">${lms}</div>`;\r\n\r\n      // document.title = `${m}:${s}:${ms}`;\r\n      requestAnimationFrame(run);\r\n    }\r\n\r\n    run();\r\n    // const int = setInterval(run, 60 / 1000);\r\n\r\n    return () => {\r\n      cancelAnimationFrame(run);\r\n      // clearInterval(int);\r\n    };\r\n  }, [stopwatchTime, lapTime]);\r\n\r\n  useEffect(() => {\r\n    if (showLapTimer) {\r\n      anime({\r\n        targets: '.timer__lapTime',\r\n        opacity: 1,\r\n        height: 43,\r\n        duration: 150,\r\n        easing: 'linear',\r\n      });\r\n    } else {\r\n      anime({\r\n        targets: '.timer__lapTime',\r\n        opacity: 0,\r\n        height: 0,\r\n        duration: 150,\r\n        easing: 'linear',\r\n      });\r\n    }\r\n  }, [showLapTimer]);\r\n\r\n  return (\r\n    <div className=\"timer\">\r\n      <div ref={time} className=\"timer__stopwatchTime\"></div>\r\n      <div ref={lap} className=\"timer__lapTime\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import { useEffect } from 'react';\r\nimport anime from 'animejs/lib/anime.es';\r\nimport './Buttons.scss';\r\n\r\nconst Buttons = ({ children }) => {\r\n  return <div className=\"buttons\">{children}</div>;\r\n};\r\n\r\nconst Button = ({ id, show, role, callback }) => {\r\n  useEffect(() => {\r\n    if (show) {\r\n      anime({\r\n        targets: '#button1',\r\n        translateX: '-10%',\r\n      });\r\n      anime({\r\n        targets: '#button2',\r\n        translateX: '10%',\r\n        opacity: 1,\r\n      });\r\n    } else {\r\n      anime({\r\n        targets: '#button1',\r\n        translateX: '50%',\r\n        opacity: 1,\r\n      });\r\n      anime({\r\n        targets: '#button2',\r\n        translateX: '-50%',\r\n        opacity: 0,\r\n      });\r\n    }\r\n  }, [show]);\r\n\r\n  return (\r\n    <button\r\n      className={`button ${role ? `button__${role}` : ''}`}\r\n      id={`button${id}`}\r\n      onClick={callback}>\r\n      {role.toUpperCase()}\r\n    </button>\r\n  );\r\n};\r\n\r\nButtons.Button = Button;\r\nexport default Buttons;\r\n","class Time {\r\n  constructor(time) {\r\n    const givenTime = time ? time : 0;\r\n\r\n    this.origin = new Date(givenTime).getTime();\r\n    this.m = new Date(givenTime).getMinutes();\r\n    this.s = new Date(givenTime).getSeconds();\r\n    this.ms = new Date(givenTime).getMilliseconds();\r\n  }\r\n\r\n  formatted = () => {\r\n    return {\r\n      origin: this.origin.toString(),\r\n      m: this.m.toString().padStart(2, '0'),\r\n      s: this.s.toString().padStart(2, '0'),\r\n      ms: this.ms.toString().padStart(3, '0'),\r\n    };\r\n  };\r\n}\r\n\r\nexport default Time;\r\n","import { useEffect } from 'react';\r\nimport anime from 'animejs/lib/anime.es';\r\nimport Time from '../Time';\r\nimport './Laps.scss';\r\n\r\nconst Laps = ({ laps }) => {\r\n  useEffect(() => {\r\n    if (laps) {\r\n      anime({\r\n        targets: '.laps',\r\n        opacity: 1,\r\n        duration: 2000,\r\n      });\r\n    } else {\r\n      anime({\r\n        targets: '.laps',\r\n        opacity: 0,\r\n      });\r\n    }\r\n  }, [laps]);\r\n\r\n  const getLapTime = (lap) => {\r\n    const { m, s, ms } = lap.formatted();\r\n\r\n    return `${m}:${s}.${ms}`;\r\n  };\r\n\r\n  const getLapDifference = (array, index) => {\r\n    const currentLap = array[index].origin;\r\n    const prevLap = array[index - 1].origin;\r\n    let diff;\r\n    if (currentLap > prevLap) {\r\n      diff = new Time(currentLap - prevLap).formatted();\r\n    } else if (currentLap < prevLap) {\r\n      diff = new Time(prevLap - currentLap).formatted();\r\n    } else {\r\n      diff = new Time(0).formatted();\r\n    }\r\n\r\n    return `${diff.m}:${diff.s}.${diff.ms}`;\r\n  };\r\n\r\n  const isBetter = (array, index) => {\r\n    const currentLap = array[index].origin;\r\n    const prevLap = array[index - 1].origin;\r\n\r\n    if (currentLap > prevLap) {\r\n      return 'worse';\r\n    } else if (currentLap < prevLap) {\r\n      return 'better';\r\n    } else {\r\n      return 'same';\r\n    }\r\n  };\r\n\r\n  const isBest = (array) => {\r\n    const lapsTimes = [];\r\n\r\n    for (const lap in array) {\r\n      if (lap > 0) {\r\n        lapsTimes.push(laps[lap].origin);\r\n      }\r\n    }\r\n    const bestTime = Math.min.apply(Math, lapsTimes);\r\n    return lapsTimes.indexOf(bestTime) + 1;\r\n  };\r\n\r\n  const isWorst = (array) => {\r\n    const lapsTimes = [];\r\n\r\n    for (const lap in array) {\r\n      if (lap > 0) {\r\n        lapsTimes.push(laps[lap].origin);\r\n      }\r\n    }\r\n    const bestTime = Math.max.apply(Math, lapsTimes);\r\n    return lapsTimes.indexOf(bestTime) + 1;\r\n  };\r\n\r\n  const getTotalTime = (array, index) => {\r\n    const sliced = array.slice(0, index + 1);\r\n    const added = sliced.reduce((p, c) => {\r\n      return new Time(p.origin + c.origin);\r\n    });\r\n\r\n    const { m, s, ms } = added.formatted();\r\n\r\n    return `${m}:${s}.${ms}`;\r\n  };\r\n\r\n  const showLaps = () => {\r\n    return laps.map((lap, index, array) => {\r\n      return index > 0 ? (\r\n        <Lap\r\n          key={index}\r\n          isBest={index === isBest(array) ? 'best' : ''}\r\n          isWorst={index === isWorst(array) ? 'worst' : ''}\r\n          isBetter={index > 1 ? isBetter(array, index) : 'same'}\r\n          number={index}\r\n          time={getLapTime(lap)}\r\n          difference={index > 1 ? getLapDifference(array, index) : '−−:−−.−−−'}\r\n          total={getTotalTime(array, index)}\r\n        />\r\n      ) : null;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const times = document.querySelector('.laps__times');\r\n\r\n    times.scrollTop = times.offsetHeight - times.scrollHeight;\r\n  });\r\n\r\n  return (\r\n    <div className=\"laps\">\r\n      <Header />\r\n      <div className=\"laps__times\">{showLaps()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"laps__header\">\r\n      <div className=\"laps__header--lap\">Lap</div>\r\n      <div className=\"laps__header--time\">Lap time</div>\r\n      <div className=\"laps__header--difference\">Difference</div>\r\n      <div className=\"laps__header--total\">Total time</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Lap = ({\r\n  isBest,\r\n  isWorst,\r\n  isBetter,\r\n  number,\r\n  time,\r\n  difference,\r\n  total,\r\n}) => {\r\n  return (\r\n    <div className={`lap ${isBest} ${isWorst}`}>\r\n      <div className=\"lap__number\">{number.toString().padStart(2, '0')}</div>\r\n      <div className=\"lap__time\">{time}</div>\r\n      <div className={`lap__difference ${isBetter}`}>{difference}</div>\r\n      <div className=\"lap__total\">{total}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Laps;\r\n","import './Menu.scss';\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <Item name=\"CONTROLS\">\r\n        To control stopwatch you can use this keys:\r\n        <br />\r\n        <Key self=\"S\" />\r\n        Start/Stop\r\n        <br />\r\n        <Key self=\"L\" />\r\n        Lap <br />\r\n        <Key self=\"R\" />\r\n        Reset\r\n      </Item>\r\n      <Item name=\"ABOUT\">To jest opis</Item>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Item = ({ name, children: description }) => {\r\n  return (\r\n    <div className=\"menu__item\">\r\n      {name.toUpperCase()}\r\n      <div className=\"menu__item--description\">{description}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Key = ({ self }) => {\r\n  return <div className=\"key\">{self.toUpperCase()}</div>;\r\n};\r\n\r\nexport default Menu;\r\n","import { Stopwatch, Menu } from './components';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <Menu />\r\n      <Stopwatch />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}